" don't forget to :PlugInstall when you add something
call plug#begin('~/.vim/plugged')

set shell=/bin/bash

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-dispatch'
Plug 'OmniSharp/omnisharp-vim'
Plug 'altercation/vim-colors-solarized'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'airblade/vim-rooter'
Plug 'vim-airline/vim-airline'
Plug 'kien/ctrlp.vim'
Plug 'pprovost/vim-ps1'
Plug 'scrooloose/syntastic'
Plug 'fsharp/vim-fsharp', {
      \ 'for': 'fsharp',
      \ 'do':  'make fsautocomplete',
      \}
Plug 'ervandew/supertab'
Plug 'editorconfig/editorconfig-vim'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-fugitive'
call plug#end()

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0


"Fonts
if has("gui_running")
  if has("gui_gtk2")
    set guifont=Inconsolata\ 12
  elseif has("gui_macvim")
    set guifont=InputMono\ ExLight:h12
  elseif has("gui_win32")
    set guifont=Consolas:h11:cANSI
  endif
  :set guioptions-=m  "remove menu bar
  :set guioptions-=T  "remove toolbar
  :set guioptions-=r  "remove right-hand scroll bar
  :set guioptions-=L  "remove left-hand scroll bar
endif

" airline configuration
let g:airline_powerline_fonts=1
" show branch in airline
let g:airline#extensions#branch#enabled = 1

"Since q lets you exit NERDTree, let's do this to get back
:nnoremap <leader>q :NERDTree<cr>
:nnoremap <leader>n :NERDTreeToggle<cr>

"Quick shortcuts for editing vimrc
:nnoremap <leader>ev :vsplit $MYVIMRC<cr>
:nnoremap <leader>sv :source $MYVIMRC<cr>

"Convert to unix lineendings with a keystroke
:nnoremap <leader>lu :set ff=unix<cr>
:nnoremap <leader>lw :set ff=win<cr>

if has("autocmd")
  autocmd BufNewFile,BufRead Vagrantfile set filetype=ruby
  autocmd FileType cfg setlocal shiftwidth=4 tabstop=4 expandtab
  autocmd FileType ruby setlocal shiftwidth=2 tabstop=2 expandtab
  autocmd FileType vim setlocal shiftwidth=2 tabstop=2 expandtab
  autocmd FileType markdown setlocal shiftwidth=4 tabstop=4 expandtab
  autocmd FileType json setlocal shiftwidth=2 tabstop=2
  autocmd FileType yaml setlocal shiftwidth=2 tabstop=2
  autocmd FileType sql setlocal shiftwidth=2 tabstop=2
  autocmd FileType ps1 setlocal shiftwidth=4 tabstop=4 expandtab
  autocmd FileType fsharp setlocal shiftwidth=4 tabstop=4 expandtab
  autocmd FileType groovy setlocal shiftwidth=4 tabstop=4 expandtab
  autocmd FileType conf setlocal shiftwidth=2 tabstop=2 expandtab

  "fugitive blob/tree navigate-up with ..
  autocmd User fugitive if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' | nnoremap <buffer> .. :edit %:h<CR> | endif
  "fugitive autoclean transient buffers
  autocmd BufReadPost fugitive://* set bufhidden=delete
endif

"For efficient #+movement
set relativenumber
if has("autocmd")
  autocmd InsertEnter * :set number
  autocmd InsertLeave * :set relativenumber
endif


" ------------------------------------------------------------------
" this block of commands has been autogenerated by solarized.vim and
" includes the current, non-default Solarized option values.
" To use, place these commands in your .vimrc file (replacing any
" existing colorscheme commands). See also ":help solarized"

" ------------------------------------------------------------------
" Solarized Colorscheme Config
" ------------------------------------------------------------------
let g:solarized_visibility="high"    "default value is normal
let g:solarized_hitrail=1    "default value is 0
syntax enable
set background=dark
colorscheme solarized
" ------------------------------------------------------------------

" The following items are available options, but do not need to be
" included in your .vimrc as they are currently set to their defaults.

" let g:solarized_termtrans=1
" let g:solarized_degrade=0
" let g:solarized_bold=1
" let g:solarized_underline=1
" let g:solarized_italic=1
" let g:solarized_termcolors=16
" let g:solarized_contrast="normal"
" let g:solarized_diffmode="normal"
" let g:solarized_menu=1

" AutoSave
let g:auto_save = 1
let g:auto_save_silent = 1
set noswapfile

" Mash j and w in either order to get back to normal mode from insert
imap wj <Esc>
imap jw <Esc>

" quicker window nav
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" CtrlP config
let g:ctrlp_working_path_mode = 'r'

